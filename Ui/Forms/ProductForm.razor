@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using ST10019838_DamianDare_PROG7311_POE.Models
@using static ST10019838_DamianDare_PROG7311_POE.Endpoints.ProductsEndpoints;
@inject IDialogService DialogService
@inject AppDbContext db




<EditForm Model="@productForm" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog Style="width: 100%;">
        <DialogContent>
            <MudStack Spacing="4" Style="max-height: 400px; overflow-y: auto;">
                <MudTextField @bind-Value="productForm.Name" Label="Product Name" Required="true"
                              For="(() => productForm.Name)" Clearable Variant="Variant.Outlined" />


                 <MudTextField @bind-Value="productForm.Description" Label="Description" For="(() => productForm.Description)"
                                    Clearable AutoGrow MaxLines="3" Variant="Variant.Outlined" />


                 <MudTextField @bind-Value="productForm.Category" Label="Category" For="(() => productForm.Category)" Clearable
                                    AutoGrow MaxLines="3" Variant="Variant.Outlined" />

                
                 <MudStack Class="flex-sm-row">
                    <MudNumericField @bind-Value="productForm.Price" Label="Price" For="(() => productForm.Price)"
                                      Min="0" Step="1" Clearable Variant="Variant.Outlined" />
                  
                    
                     <MudNumericField @bind-Value="productForm.Quantity" Label="Quantity" For="(() => productForm.Quantity)"
                                      Min="0" Step="1" Clearable Variant="Variant.Outlined" />
                </MudStack>

             </MudStack>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">Submit</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>




 @code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    bool isValid;
    ProductFormModel productForm = new ProductFormModel();

    async void OnValidSubmit(EditContext context)
    {
        // context.Validate();
        // isValid = true;
        // StateHasChanged();

        // Submit form
        await CreateProduct(db, productForm);

        // MudDialog.Close(DialogResult.Ok(true));
    }
    void Cancel() => MudDialog.Cancel();
}